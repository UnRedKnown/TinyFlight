Pitch:

F-15 @ 1.2:
@ 200 kts:
01:42.12 - 01:43.16?
1.1 sec
@ 350 kts:
03:10.13 - 03:11:08
0.9 sec
@ 500 kts:
04:37.16 - 04:38.13
0.9 sec
@ 750 kts:
08:22.14 - 08:23.16
1 sec

F-15 @ 1.0:
@ 200 kts:
17:08.07 - 17:08.28?
0.5 sec
@ 350 kts:
18:31.23 - 18:32.20
1 sec
@ 736 kts:
21:00.12 - 21:01.13
1 sec

F-15 @ 1.51:
@ 775 kts:
27:37.27 - 27:38.16
0.7 sec

F-35 @ 1.2:
@ 655 kts:
31:45.03 - 31:46.01
1 sec
@ 500 kts:
33:50.08 - 33:51.06
1 sec

F-14 @ 1.2:
@ 980 kts:
42:37.21 - 42:38.27
1.1 sec

Roll:

F-15:
@ 200 kts:
02:16.09 - 02:17.18
1.2 sec
@ 350 kts:
03:04.25 - 03:05.19
0.9 sec
@ 500 kts:
03:47.14 - 03:48.01
0.7 sec
@ 750 kts:
04:38.07 - 04:38.29
0.5 sec

F-35:
@ 200 kts:
09:06.20 - 09:08.03
1.2 sec
@ 350 kts:
09:49.14 - 09:50.08
0.7 sec
@ 500 kts:
10:35.02 - 10:35.19
0.4 sec
@ 685 kts:
11:43.14 - 11:44.03
0.5 sec
@ VTOL:
24:51.20 - 24:54.11
2.5 sec

F-14:

Wings forward:
@ 200 kts:
16:15.26 - 16:17.19
1.7
@ 350 kts:
17:01.22 - 17:02.27
0.9 sec
@ 500 kts:
18:16.09 - 18:17.08
1 sec
@ 600 kts:
19:04.12 - 19:05.11
1 sec

Wings back:
@ 200 kts:
19:47.02 - 19:48.07
1.1 sec
@ 350 kts:
20:18.24 - 20:19.19
0.8 sec
@ 950 kts:
22:15.20 - 22:16.15
0.9 sec

x*200 = 1
x*350 = 0.8
x*




    if roll_angle < 0: roll_angle = 359
    elif roll_angle > 359: roll_angle = 0
    if pitch_angle < 0: pitch_angle = 359
    elif pitch_angle > 359: pitch_angle = 0

    keys = pygame.key.get_pressed()
    if keys[pygame.K_LEFT]:
        roll_angle -= 1
    if keys[pygame.K_RIGHT]:
        roll_angle += 1
    if keys[pygame.K_UP]:
        pitch_angle += 1
    if keys[pygame.K_DOWN]:
        pitch_angle -= 1